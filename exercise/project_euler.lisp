;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; If we list all the natural numbers below 10 that are multiples of 3 or
;; 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

;; Find the sum of all the multiples of 3 or 5 below 1000.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun sum35 (x)
  ;; not inclusive of x, it goes to x-1
  (setf a 0)
  (do
   ((i 1 (+ i 1)))
   ((> i (- x 1)) (return a))

    (when
     (or (= (mod i 3) 0) (= (mod i 5) 0))
      (setf a (+ a i)))
  ))

(sum35 1000)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Each new term in the Fibonacci sequence is generated by adding the
;; previous two terms. By starting with 1 and 2, the first 10 terms will
;; be:

;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;; By considering the terms in the Fibonacci sequence whose values do notk
;; exceed four million, find the sum of the even-valued terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


(defun fib (x)
  ;; this is somewhat a for loop
  (let ((a 0)(b 1)(c 0)(s 0))
    (loop 
       (when (evenp a) (setf s (+ s a)))
       ;;(format t "a is ~s, s is ~s~%"  a s)
       (when (> (+ a b) x)(return s))
	(setf c a
	      a (+ a b)
	      b c)
       )))
(fib 4000000)


;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; The prime factors of 13195 are 5, 7, 13 and 29.

;; What is the largest prime factor of the number 600851475143 ?
;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun findPrime (x)
  ;; this is a while loop
  (loop while (= (mod x 2) 0)
     do (setf x (/ x 2))
       (print 2))

  ;(format t "current x is ~s~%" x)
  ;; this is a for loop
  (loop for i from 3 to (sqrt x) by 1
     do
       (loop while (= (mod x i) 0)
  	  do (setf x (/ x i))
  	    (print i))
       )

  (when (> x 2)
    (print x))
  )

(findPrime 13195)
(findPrime 600851475143)





;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 Ã— 99.

;; Find the largest palindrome made from the product of two 3-digit numbers.
;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun rn (x)
  ;; reverse a number in order
  (setf s 0)
  (loop while (> x 0)
     do
       (setf rr (rem x 10)
	     a (floor (/ x 10))
	     x a
	     s (+ rr (* 10 s)))
	)
  s
)

(defun parProd ()
  (setf ret 0)
  (loop for i from 101 to 1000 do
       (loop for j from 101 to 1000 do
	  (when (and (= (* i j) (rn (* i j))) (> (* i j) ret))
	    (setf ret (* i j)))
	  )
       )
  ret
  ;; last value will be returned by default
  )

;; not (parProd ())
(parProd)




;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; 2520 is the smallest number that can be divided by each of the
;; numbers from 1 to 10 without any remainder.

;; What is the smallest positive number that is evenly divisible by
;; all of the numbers from 1 to 20?
;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(list 11 12 13 14 15 16 17 18 19 20)

;;(defun eval5 (&optional (x 2520))
(defun eval5 (x)
  (setq f (list 11 12 13 14 15 16 17 18 19 20))
  ;;(setq f (list 3 5))
  ;;(setq f (list 1 2 3 4 5 6 7 8 9 10))
  (loop for i in f
     do
       (setf r (rem x i))
       (when (/= r 0) (return r))
       )
  )

(eval5 5040)

(let ((a 2520))
  (loop
     (setq a (+ a 1))
     (unless (eval5 a) (return a))
       ))
