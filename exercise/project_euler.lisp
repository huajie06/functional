;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; If we list all the natural numbers below 10 that are multiples of 3 or
;; 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

;; Find the sum of all the multiples of 3 or 5 below 1000.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defun sum35 (x)
  ;; not inclusive of x, it goes to x-1
  (setf a 0)
  (do
   ((i 1 (+ i 1)))
   ((> i (- x 1)) (return a))

    (when
     (or (= (mod i 3) 0) (= (mod i 5) 0))
      (setf a (+ a i)))
  ))

(sum35 1000)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Each new term in the Fibonacci sequence is generated by adding the
;; previous two terms. By starting with 1 and 2, the first 10 terms will
;; be:

;; 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

;; By considering the terms in the Fibonacci sequence whose values do notk
;; exceed four million, find the sum of the even-valued terms.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



;; (defun sum4m (&key (c 4000000))
;;   ()
;;   )

(defun fib (x)
  (let ((a 0)(b 1)(c 0)(s 0))
    (loop 
       (when (evenp a) (setf s (+ s a)))
       ;;(format t "a is ~s, s is ~s~%"  a s)
       (when (> (+ a b) x)(return s))
	(setf c a
	      a (+ a b)
	      b c)
       )))
(fib 4000000)



